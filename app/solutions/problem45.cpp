/*
Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
Pentagonal      Pn=n(3n-1)/2        1, 5, 12, 22, 35, ...
Hexagonal       Hn=n(2n-1)      1, 6, 15, 28, 45, ...
It can be verified that T285 = P165 = H143 = 40755.

Find the next triangle number that is also pentagonal and hexagonal.
*/

#include <math.h>
#include <iostream>

long long getTriangleNumber(long long n)
{
    return n * (n + 1) / 2;
}

bool isPentagonalNumber(long long x)
{
    long double n = (1.0 + sqrt(1.0 + 24.0 * x)) / 6.0;
    return n == static_cast<long long>(n);
}

bool isHexagonalNumber(long long x)
{
    long double n = (1.0 + sqrt(1.0 + 8.0 * x)) / 4.0;
    return n == static_cast<long long>(n);
}

int main(int argc, char const *argv[])
{
    long long n = 286;
    long long x;
    while(true)
    {
        x = getTriangleNumber(n);
        if (isHexagonalNumber(x) && isPentagonalNumber(x))
        {
            std::cout << "result: " << n << " " << x << std::endl;
            break;
        }
        ++n;
    }
    return 0;
}
